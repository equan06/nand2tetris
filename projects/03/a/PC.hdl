// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	// This looks real ugly...

	// determine whether to switch to input
	Mux16(a=res, b=in, sel=load, out=x);
	
	// check INC and NOT RESET and NOT LOAD
	Or(a=reset, b=load, out=resetORload);
	Not(in=resetORload, out=notresetANDnotload);
	And(a=notresetANDnotload, b=inc, out=inconly);
	
	// perform calculation for out
	ALU(x=x, y=false, zx=reset, nx=inconly, zy=true, ny=inconly, f=true, no=inconly, out=aluresult);
	
	// determine if we need to update register 
	Or(a=reset, b=load, out=resetorload);
	Or(a=resetorload, b=inc, out=resetorloadorinc);
	Register(in=aluresult, load=resetorloadorinc, out=out, out=res);
}
